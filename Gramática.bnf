<max-letter> ::=| "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" | "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" | "Y" | "Z" 

<min-letter> ::=  "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" | "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" | "w" | "x" | "y" | "z"

<digit> ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"

<numero> ::= <digit> *{<digit>}

<identificador-var> ::= "v"1*{<max-letter> | <digit> | <min-letter>}

<identificador-func> ::= "f"1*{<max-letter> | <digit> | <min-letter>}
<identificador-proc> ::= "p"1*{<max-letter> | <digit> | <min-letter>}


<boolean> ::= "true" | "false"

<especificador-tipo> ::= "int"   
                    | "boolean"


#//-----------------Variaveis--------------------//

<var-declaracao> ::= <var> ";"

<var> ::= <especificador-tipo> <identificador-var> <attr-var> 

<attr-var> ::= "=" <expression>

#//-----------------Funcoes--------------------//
<funcao-declaracao> ::= "func" <especificador-tipo> <identificador-func> "(" <func-aux> 
<func-aux> ::= <lista-parametros> ")" "{" <statement> "return " <identificador-var> ";" "}" | ")" "{" <statement> "return " <identificador-var> ";" "}"

<lista-parametros> ::= <parametro-declaracao> <parametro-aux>
<parametro-aux> ::= ','<lista-parametros> | ε
<parametros-declaracao> ::= <especificador-tipo> <identificador-var>

#//----------------Procedimento----------------//

<procedimento-declaracao> ::= "proc" <identificador-proc> "(" <lista-parametros> ")" "{" <statement> "}"


#//---------------------START--------------------------------
<start> ::= 0*1{<statement-list>}

<statement-list> ::= <statement> <statement-list> | ε
#//---------------------START--------------------------------
#//----------------------------------------------------------

<statement> ::= <var-declaracao> #Cria var
            | <funcao-declaracao> #Cria func
            | <procedimento-declaracao> #Cria proc
            | "if" "(" <condicao> ")" "{" <statement-list> "}" <if-aux> 
            | "while" "(" <condicao> ")" "{" <statement-list> "}"
            #statement-list, para poder mais de um statement
            # if(...){
            #     if(...){
            #     }
            #     if(...){   
            #     }
            # }                                                                           
            | "puts" <identificador-var>";"                                                                                                    
            | "puts" <identificador-func>";" #nao pede na lista                                                                              
            | "puts" <numero>";"
            | <identificador-func> "(" <lista-parametros> ")"";" #Chama função
            | <identificador-proc> "(" <lista-parametros> ")"";" #Chama procedimento
            | "break"";" #Dentro de laço apenas, sintático
            | "continue"";" #Dentro de laço apenas, sintático
<if-aux> ::= 'else' '{'<statement>'}'            
<expression> ::= <logical-expression>
            | <arithmetic-expression>
            | <numero>
            | <boolean>
            | <identificador-func> "(" <lista-parametros> ")"
            | <identificador-var>

<logical-expression> ::= <termo> <op-condicional> <termo>

<termo> ::= <identificador-var> | <numero> | <identificador-func>

<arithmetic-expression> ::= <termo-aritmetico> *{( "+" | "-" ) <termo-aritmetico>}

<termo-aritmetico> ::= <fator> *{ ( "*" | "/" ) <fator> }

<fator> ::= <identificador-var> | <numero> | <arithmetic-expression>

<condicao> ::= <expression> <condicao-aux>
<condicao-aux> ::= <op-condicional> <condicao> | ε

<op-condicional> ::= "=="| "<>" | "<" |"<=" | ">" | ">="
