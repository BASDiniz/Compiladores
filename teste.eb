int vA = 1;
int vB = 2;

int vW = fSum(1,2);
int vU = fSum();
int vU = vA;

puts 1;
puts vA;
puts fSum(1,2);
puts fSum(1,2);
puts 1;
puts vA;
puts fSum(1,2);
puts fSum(1,2);
int vA = 1;
int vB = 2;

func int fSum(int vB, int vA){
	int vX = 0;
	int vZ = 0;
	
	return vUniu;
}

proc pTeste(int vB, boolean vUniu){
	boolean vA = true;
	int vB = 10;
}
int vW = fSum(1,2,3);
int vU = fSum();
int vU = vA;

puts 1;
puts vA;
puts fSum(1,2);
puts fSum(1,2);
puts 1;
puts vA;
puts fSum(1,2);
puts fSum(1,2,3);

pSum(1);
int vX = fSum(1);

if(3 + 3){
	int vA = 0;
	boolean vB = true;
	int vC = 4 + 3;
}
else{
	int vB = 5;
	boolean vX = false;
}


while (vA > vB <> vC == vUniu < 3 <= 5 >= 10){
	int vC = 10;
	boolean vU = 4;
	break;
	continue;
}









